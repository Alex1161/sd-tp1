version: '3.9'
name: tp0
services:
  weather_queue:
    build:
      context: ./rabbitmq
      dockerfile: rabbitmq.dockerfile
    ports:
      - 15672:15672
    networks:
      - testing_net
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 7s
      timeout: 30s
      retries: 3
  
  time_queue:
    build:
      context: ./rabbitmq
      dockerfile: rabbitmq.dockerfile
    ports:
      - 15673:15673
    networks:
      - testing_net
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 7s
      timeout: 30s
      retries: 3

  mont_royal_queue:
    build:
      context: ./rabbitmq
      dockerfile: rabbitmq.dockerfile
    ports:
      - 15674:15674
    networks:
      - testing_net
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 7s
      timeout: 30s
      retries: 3

  rain_filter:
    image: rain_filter:latest
    entrypoint: python3 /main.py
    build:
      dockerfile: rain_filter/rain_filter.dockerfile
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=${LOGGING_LEVEL}
      - CHUNK_SIZE=${CHUNK_SIZE}
    networks:
      - testing_net
    volumes:
      - ./rain_filter/config.ini:/config.ini
    depends_on:
      weather_queue:
        condition: service_healthy

  time_filter:
    image: time_filter:latest
    entrypoint: python3 /main.py
    build:
      dockerfile: time_filter/time_filter.dockerfile
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=${LOGGING_LEVEL}
      - CHUNK_SIZE=${CHUNK_SIZE}
    networks:
      - testing_net
    volumes:
      - ./time_filter/config.ini:/config.ini
    depends_on:
      time_queue:
        condition: service_healthy

  mont_royal_filter:
    image: mont_royal_filter:latest
    entrypoint: python3 /main.py
    build:
      dockerfile: mont_royal_filter/mont_royal_filter.dockerfile
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=${LOGGING_LEVEL}
      - CHUNK_SIZE=${CHUNK_SIZE}
    networks:
      - testing_net
    volumes:
      - ./mont_royal_filter/config.ini:/config.ini
    depends_on:
      mont_royal_queue:
        condition: service_healthy

  server:
    container_name: server
    image: server:latest
    entrypoint: python3 /main.py
    build:
      dockerfile: server/server.dockerfile
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=${LOGGING_LEVEL}
      - CHUNK_SIZE=${CHUNK_SIZE}
    networks:
      - testing_net
    depends_on:
      - rain_filter
      - time_filter
      - mont_royal_filter
    volumes:
      - ./server/config.ini:/config.ini

  client:
    image: client:latest
    entrypoint: python3 /main.py
    deploy:
      replicas: ${CLIENT_REPLICAS}
    build:
      dockerfile: client/client.dockerfile
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=${LOGGING_LEVEL}
      - CHUNK_SIZE=${CHUNK_SIZE}
    networks:
      - testing_net
    depends_on:
      - server
    volumes:
      - ./client/config.ini:/config.ini
      - ./client/data_test/:/data/

networks:
  testing_net:
    ipam:
      driver: default
      config:
        - subnet: 172.25.125.0/24
